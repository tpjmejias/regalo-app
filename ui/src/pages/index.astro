---
import Layout from '../layouts/Layout.astro';
import Logo from '../components/Logo.astro';
import { colorThemes } from '../config/theme';

// Seleccionar un tema aleatorio
const randomTheme = colorThemes[Math.floor(Math.random() * colorThemes.length)];

// Array de slogans
const slogans = [
  {
    title: "Tu lista de regalos",
    subtitle: "en un solo lugar",
    description: "Crea y comparte tu lista de deseos de manera fácil y rápida. Sin complicaciones, solo con tu número de teléfono."
  },
  {
    title: "Comparte tus deseos",
    subtitle: "sin complicaciones",
    description: "La forma más sencilla de hacer saber a todos qué te gustaría recibir. Sin apps, sin registros complejos."
  },
  {
    title: "Tus regalos ideales",
    subtitle: "al alcance de todos",
    description: "Organiza y comparte tus deseos de regalo de forma simple. La manera perfecta de asegurar que recibirás lo que realmente quieres."
  },
  {
    title: "Sorprende y déjate",
    subtitle: "sorprender",
    description: "Crea tu lista de deseos y descubre qué les gustaría recibir a tus seres queridos. La magia de regalar empieza aquí."
  }
];

// Seleccionar un slogan aleatorio
const randomSlogan = slogans[Math.floor(Math.random() * slogans.length)];

const features = [
  {
    title: 'Fácil de Usar',
    description: 'Crea tu lista en segundos y compártela con quien quieras. Solo necesitas tu número de teléfono.',
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
    </svg>`
  },
  {
    title: 'Sin Apps Extra',
    description: 'No necesitas descargar nada. Todo funciona directamente desde tu navegador web.',
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z" />
    </svg>`
  },
  {
    title: 'Comparte Fácilmente',
    description: 'Comparte tu lista por WhatsApp, redes sociales o simplemente envía el enlace.',
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
    </svg>`
  }
];
---

<Layout title="LinkGift - Tu Lista de Regalos">
  <div class={`min-h-screen bg-gradient-to-br ${randomTheme.gradient}`}>
    <div class="min-h-screen bg-white/95 backdrop-blur-sm">
      <div class="max-w-4xl mx-auto px-4 pt-20 pb-32 text-center">
        <Logo size="lg" class="justify-center mb-8" />
        <h1 class="text-4xl sm:text-6xl font-bold text-gray-900 mb-6">
          {randomSlogan.title}
          <span class={`bg-clip-text text-transparent bg-gradient-to-r ${randomTheme.gradient}`}>
            {randomSlogan.subtitle}
          </span>
        </h1>
        <p class="text-xl text-gray-600 mb-12 max-w-2xl mx-auto">
          {randomSlogan.description}
        </p>
        <div class="flex flex-col items-center gap-8">
          <div class="flex flex-row gap-4 justify-center w-full">
            <div class="flex flex-col items-center flex-1 max-w-xs">
              <a
                href="/login"
                class={`w-full inline-flex items-center justify-center px-8 py-4 text-lg font-medium rounded-full text-white bg-gradient-to-r ${randomTheme.gradient} hover:opacity-90 transition-all shadow-lg hover:shadow-xl transform hover:-translate-y-0.5`}
              >
                Comenzar
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12v10H4V12M2 7h20v5H2m10 10V7m0 0H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7zm0 0h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z" />
                </svg>
              </a>
              <p class="text-sm mt-2">
                Presiona <span class={`font-medium bg-gradient-to-r ${randomTheme.gradient} bg-clip-text text-transparent`}>comenzar</span> para crear o editar tu lista
              </p>
            </div>
            <div class="flex flex-col items-center flex-1 max-w-xs">
              <a 
                href="/search" 
                class="w-full inline-flex items-center justify-center px-8 py-4 text-lg font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 border-2 border-gray-200 hover:border-gray-300 transition-all shadow-lg hover:shadow-xl transform hover:-translate-y-0.5"
              >
                Buscar Listas
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
              </a>
              <p class="text-sm mt-2">
                <span class={`font-medium bg-gradient-to-r ${randomTheme.gradient} bg-clip-text text-transparent`}>Encuentra</span> las listas de tus amigos
              </p>
            </div>
          </div>
        </div>
      </div>

      <!-- Features -->
      <div class="max-w-4xl mx-auto px-4 pb-20">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
          {features.map(feature => (
            <div class="bg-white rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all transform hover:-translate-y-1">
              <div class={`w-12 h-12 bg-gradient-to-br ${randomTheme.gradient} rounded-xl flex items-center justify-center text-white mb-4 mx-auto`}>
                <div class="flex items-center justify-center" set:html={feature.icon} />
              </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2 text-center">{feature.title}</h3>
              <p class="text-gray-600 text-center">{feature.description}</p>
            </div>
          ))}
        </div>
      </div>

      <!-- Example Lists -->
      <div class="max-w-4xl mx-auto px-4 pb-20">
        <h2 class="text-2xl font-bold text-center text-gray-900 mb-8">Últimas listas creadas</h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6" id="latestLists">
          <div class="animate-pulse space-y-4">
            <div class="h-14 bg-white rounded-lg shadow"></div>
            <div class="h-14 bg-white rounded-lg shadow"></div>
            <div class="h-14 bg-white rounded-lg shadow"></div>
          </div>
        </div>
      </div>

      <!-- Footer -->
      <footer class="max-w-4xl mx-auto px-4 py-8 text-center text-gray-600 border-t">
        <p>&copy; {new Date().getFullYear()} LinkGift. Todos los derechos reservados.</p>
      </footer>
    </div>
  </div>
</Layout>

<script>
  const API_URL = 'http://localhost:5001';

  // Guardar el tema en localStorage
  const currentTheme = document.querySelector('[class*="bg-gradient-to-br"]')?.className.match(/from-\w+-\d+ to-\w+-\d+/)?.[0];
  if (currentTheme) {
    localStorage.setItem('linkgift:theme', currentTheme);
  }

  // Cargar últimas listas
  async function loadLatestLists() {
    try {
      const response = await fetch(`${API_URL}/api/gifts/latest`);
      if (!response.ok) throw new Error('Error al cargar las listas');
      const gifts = await response.json();
      
      const container = document.getElementById('latestLists');
      if (!container) return;

      // Agrupar por teléfono
      const listsByPhone = gifts.reduce((acc: any, gift: any) => {
        if (!acc[gift.userId]) {
          acc[gift.userId] = [];
        }
        acc[gift.userId].push(gift);
        return acc;
      }, {});

      // Mostrar las últimas 6 listas
      const lists = Object.entries(listsByPhone).slice(0, 6);
      
      container.innerHTML = lists.map(([phone, gifts]: [string, any[]]) => {
        const giftCount = gifts.length;
        return `
          <a 
            href="/${phone}" 
            class="block bg-white rounded-xl shadow-lg hover:shadow-xl transition-all transform hover:-translate-y-1 overflow-hidden group"
          >
            <div class="p-4">
              <div class="flex items-center justify-between mb-1">
                <h3 class="font-medium text-gray-900 group-hover:text-primary-500 transition-colors">
                  Lista de ${phone}
                </h3>
                <span class="text-sm text-gray-500">${giftCount} regalo${giftCount !== 1 ? 's' : ''}</span>
              </div>
              <p class="text-sm text-gray-500">
                Última actualización: ${new Date(gifts[0].createdAt).toLocaleDateString()}
              </p>
            </div>
          </a>
        `;
      }).join('');
    } catch (error) {
      console.error('Error:', error);
      const container = document.getElementById('latestLists');
      if (container) {
        container.innerHTML = '<p class="text-red-600 text-center col-span-full">Error al cargar las listas recientes</p>';
      }
    }
  }

  // Cargar datos cuando la página esté lista
  document.addEventListener('DOMContentLoaded', loadLatestLists);
</script>
