---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import { icons } from '../config/icons';
import { colorThemes } from '../config/theme';

const { phone } = Astro.params;

// Obtener la información del usuario desde el backend
let userIconId = 'default';
let userThemeId = 'pink-violet';
try {
  const response = await fetch(`http://localhost:5001/api/users/${phone}`);
  if (response.ok) {
    const userData = await response.json();
    userIconId = userData.iconId || 'default';
    userThemeId = userData.themeId || 'pink-violet';
  }
} catch (error) {
  console.error('Error al cargar información del usuario:', error);
}

const theme = colorThemes.find(t => t.id === userThemeId) || colorThemes[0];
const icon = icons.find(i => i.id === userIconId) || icons[0];
---

<Layout title={`Lista de ${phone} - LinkGift`}>
  <div class={`min-h-screen bg-gradient-to-br ${theme.gradient}`}>
    <div class="min-h-screen bg-white/95 backdrop-blur-sm flex flex-col items-center">
      <Header />
      
      <div class="w-full max-w-md mx-auto px-4">
        <!-- Profile Header -->
        <div class="text-center mb-8">
          <div class={`w-24 h-24 bg-gradient-to-br ${theme.gradient} rounded-full mx-auto flex items-center justify-center text-white mb-4`}>
            <span class="text-4xl">{icon.emoji}</span>
          </div>
          <p class="text-lg font-medium text-gray-900 mb-2">{phone}</p>
          <h1 class="text-2xl font-bold text-gray-900 mb-8">Lista de Regalos</h1>
        </div>

        <!-- Share Buttons -->
        <div class="flex flex-wrap justify-center gap-3 mb-12">
          <button
            onclick="shareOnWhatsApp()"
            class="w-12 h-12 flex items-center justify-center rounded-full bg-white/80 hover:bg-white shadow-lg hover:shadow-xl transition-all transform hover:-translate-y-1 text-[#25D366] hover:text-[#128C7E]"
            title="Compartir en WhatsApp"
          >
            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
              <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z"/>
            </svg>
          </button>

          <button
            onclick="shareOnTelegram()"
            class="w-12 h-12 flex items-center justify-center rounded-full bg-white/80 hover:bg-white shadow-lg hover:shadow-xl transition-all transform hover:-translate-y-1 text-[#0088cc] hover:text-[#006699]"
            title="Compartir en Telegram"
          >
            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
              <path d="M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z"/>
            </svg>
          </button>

          <button
            onclick="shareOnTwitter()"
            class="w-12 h-12 flex items-center justify-center rounded-full bg-white/80 hover:bg-white shadow-lg hover:shadow-xl transition-all transform hover:-translate-y-1 text-[#1DA1F2] hover:text-[#0C85D0]"
            title="Compartir en Twitter"
          >
            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
              <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
            </svg>
          </button>

          <button
            onclick="shareOnFacebook()"
            class="w-12 h-12 flex items-center justify-center rounded-full bg-white/80 hover:bg-white shadow-lg hover:shadow-xl transition-all transform hover:-translate-y-1 text-[#1877F2] hover:text-[#0C5DC7]"
            title="Compartir en Facebook"
          >
            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
              <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
            </svg>
          </button>

          <button
            onclick="shareOnEmail()"
            class="w-12 h-12 flex items-center justify-center rounded-full bg-white/80 hover:bg-white shadow-lg hover:shadow-xl transition-all transform hover:-translate-y-1 text-gray-600 hover:text-gray-800"
            title="Compartir por Email"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
            </svg>
          </button>

          <button
            onclick="copyShareLink()"
            class="w-12 h-12 flex items-center justify-center rounded-full bg-white/80 hover:bg-white shadow-lg hover:shadow-xl transition-all transform hover:-translate-y-1 text-gray-600 hover:text-gray-800"
            title="Copiar enlace"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
            </svg>
          </button>
        </div>

        <!-- Gift Links -->
        <div id="giftsList" class="space-y-4 mb-12">
          <div class="animate-pulse space-y-4">
            <div class="h-16 bg-white rounded-xl shadow"></div>
            <div class="h-16 bg-white rounded-xl shadow"></div>
            <div class="h-16 bg-white rounded-xl shadow"></div>
          </div>
        </div>

        <!-- Empty State -->
        <div id="emptyState" class="text-center py-12 hidden">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 mx-auto text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4M12 20V4" />
          </svg>
          <p class="text-gray-500 mb-8">Esta lista aún no tiene regalos</p>
        </div>

        <!-- Create Your List CTA -->
        <div class="text-center pb-12">
          <p class="text-lg text-gray-600 mb-6">
            ¿Te gustaría tener tu propia lista de regalos?<br/>
            ¡Es gratis y súper fácil!
          </p>
          <a
            href="/login"
            class={`inline-flex items-center px-8 py-4 text-lg font-medium rounded-xl text-white bg-gradient-to-r ${theme.gradient} hover:opacity-90 transition-all shadow-lg hover:shadow-xl transform hover:-translate-y-0.5`}
          >
            Crear mi Lista
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
            </svg>
          </a>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  const API_URL = 'http://localhost:5001';
  const phone = window.location.pathname.slice(1);

  // Escuchar el evento de selección de ícono
  document.addEventListener('iconSelected', async (e: any) => {
    if (!phone) return;
    
    try {
      const response = await fetch(`${API_URL}/api/users/${phone}/icon`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          iconId: e.detail.iconId
        }),
      });

      if (!response.ok) {
        throw new Error('Error al actualizar el ícono');
      }

      // Actualizar icono en la UI
      document.dispatchEvent(new CustomEvent('updateIcon', {
        detail: { iconId: e.detail.iconId }
      }));
    } catch (error) {
      console.error('Error al actualizar el ícono:', error);
      alert('Error al actualizar el ícono. Por favor, intenta de nuevo.');
    }
  });

  // Cargar lista de regalos
  async function loadGifts() {
    try {
      const response = await fetch(`${API_URL}/api/gifts/${phone}`);
      if (!response.ok) throw new Error('Error al cargar la lista');
      const gifts = await response.json();

      const giftsList = document.getElementById('giftsList');
      const emptyState = document.getElementById('emptyState');

      if (!giftsList || !emptyState) return;

      if (gifts.length === 0) {
        giftsList.classList.add('hidden');
        emptyState.classList.remove('hidden');
      } else {
        giftsList.classList.remove('hidden');
        emptyState.classList.add('hidden');
        giftsList.innerHTML = gifts.map(gift => {
          const domain = new URL(gift.url).hostname.replace('www.', '');
          return `
            <a 
              href="${gift.url}" 
              target="_blank"
              class="block bg-white/80 backdrop-blur-sm rounded-xl p-4 shadow-lg hover:shadow-xl transition-all transform hover:-translate-y-1 hover:bg-white"
            >
              <div class="flex items-center gap-4">
                <img 
                  src="https://www.google.com/s2/favicons?domain=${domain}&sz=32"
                  class="w-8 h-8"
                  alt="${domain}"
                />
                <div class="flex-1 min-w-0">
                  <div class="font-medium text-gray-900 truncate group-hover:text-primary-500 transition-colors">
                    ${domain}
                  </div>
                  <div class="text-sm text-gray-500 truncate">
                    ${gift.url}
                  </div>
                </div>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                </svg>
              </div>
            </a>
          `;
        }).join('');
      }
    } catch (error) {
      console.error('Error:', error);
      const giftsList = document.getElementById('giftsList');
      if (giftsList) {
        giftsList.innerHTML = '<p class="text-red-600 text-center">Error al cargar la lista. Por favor, intenta de nuevo.</p>';
      }
    }
  }

  // Funciones de compartir
  window.shareOnWhatsApp = () => {
    const text = `¡Mira mi lista de regalos en LinkGift! 🎁`;
    const url = window.location.href;
    window.open(`https://wa.me/?text=${encodeURIComponent(text + '\n\n' + url)}`, '_blank');
  };

  window.shareOnTelegram = () => {
    const text = `¡Mira mi lista de regalos en LinkGift! 🎁`;
    const url = window.location.href;
    window.open(`https://t.me/share/url?url=${encodeURIComponent(url)}&text=${encodeURIComponent(text)}`, '_blank');
  };

  window.shareOnTwitter = () => {
    const text = `¡Mira mi lista de regalos en LinkGift! 🎁`;
    const url = window.location.href;
    window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}&url=${encodeURIComponent(url)}`, '_blank');
  };

  window.shareOnFacebook = () => {
    const url = window.location.href;
    window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`, '_blank');
  };

  window.shareOnEmail = () => {
    const subject = encodeURIComponent('¡Mira mi lista de regalos!');
    const body = encodeURIComponent(`¡Hola!\n\nQuiero compartir contigo mi lista de regalos en LinkGift:\n\n${window.location.href}\n\n¡Gracias!`);
    window.location.href = `mailto:?subject=${subject}&body=${body}`;
  };

  window.copyShareLink = () => {
    navigator.clipboard.writeText(window.location.href).then(() => {
      // Mostrar un toast o notificación
      alert('¡Enlace copiado al portapapeles!');
    }).catch(() => {
      alert('Error al copiar el enlace');
    });
  };

  // Cargar datos cuando la página esté lista
  document.addEventListener('DOMContentLoaded', () => {
    loadGifts();

    // Registrar el listener del tema aquí
    document.addEventListener('themeSelected', async (e: any) => {
      console.log('Theme event received:', e.detail);
      if (!phone) return;
      
      try {
        // Hacer la petición al backend
        const response = await fetch(`${API_URL}/api/users/${phone}/theme`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            themeId: e.detail.themeId
          }),
        });

        console.log('Backend response:', response.status); // Debug log

        if (!response.ok) {
          const errorData = await response.json();
          console.error('Backend error:', errorData);
          throw new Error('Error al actualizar el tema');
        }

        // Si la actualización fue exitosa, actualizar la UI
        const pageBackground = document.getElementById('pageBackground');
        if (pageBackground && e.detail.themeGradient) {
          pageBackground.className = `min-h-screen bg-gradient-to-br ${e.detail.themeGradient}`;
        }

        // Actualizar el icono del perfil
        document.dispatchEvent(new CustomEvent('updateTheme', {
          detail: e.detail
        }));

      } catch (error) {
        console.error('Error al actualizar el tema:', error);
        alert('Error al actualizar el tema. Por favor, intenta de nuevo.');
      }
    });
  });
</script> 