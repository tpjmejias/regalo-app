---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import ProfileEditor from '../components/ProfileEditor.astro';
import { colorThemes } from '../config/theme';

const defaultTheme = colorThemes[0];
---

<Layout title="Mi Lista - LinkGift">
  <div id="pageBackground" class={`min-h-screen bg-gradient-to-br ${defaultTheme.gradient}`}>
    <div class="min-h-screen bg-white/95 backdrop-blur-sm">
      <Header />
      
      <div class="max-w-xl mx-auto px-4">
        <!-- Profile Section -->
        <div class="text-center mb-12">
          <div class="mb-4">
            <ProfileEditor />
          </div>
          <p class="text-lg font-medium text-gray-900 mb-2">
            <span id="userPhone"></span>
          </p>
          <h1 class="text-3xl font-bold text-gray-900 mb-8">Mi Lista de Regalos</h1>
          
          <div class="flex flex-col sm:flex-row gap-4 justify-center">
            <div class="flex flex-wrap justify-center gap-3">
              <button
                id="copyLinkBtn"
                class="w-12 h-12 flex items-center justify-center rounded-full bg-white/80 hover:bg-white shadow-lg hover:shadow-xl transition-all transform hover:-translate-y-1 text-gray-600 hover:text-gray-800"
                title="Copiar enlace"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
                </svg>
              </button>

              <button
                id="shareWhatsApp"
                class="w-12 h-12 flex items-center justify-center rounded-full bg-white/80 hover:bg-white shadow-lg hover:shadow-xl transition-all transform hover:-translate-y-1 text-[#25D366] hover:text-[#128C7E]"
                title="Compartir en WhatsApp"
              >
                <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413Z"/>
                </svg>
              </button>

              <button
                id="shareTelegram"
                class="w-12 h-12 flex items-center justify-center rounded-full bg-white/80 hover:bg-white shadow-lg hover:shadow-xl transition-all transform hover:-translate-y-1 text-[#0088cc] hover:text-[#006699]"
                title="Compartir en Telegram"
              >
                <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z"/>
                </svg>
              </button>

              <button
                id="shareTwitter" 
                class="w-12 h-12 flex items-center justify-center rounded-full bg-white/80 hover:bg-white shadow-lg hover:shadow-xl transition-all transform hover:-translate-y-1 text-[#1DA1F2] hover:text-[#0C85D0]"
                title="Compartir en Twitter"
              >
                <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                </svg>
              </button>

              <button
                id="shareFacebook"
                class="w-12 h-12 flex items-center justify-center rounded-full bg-white/80 hover:bg-white shadow-lg hover:shadow-xl transition-all transform hover:-translate-y-1 text-[#1877F2] hover:text-[#0C5DC7]"
                title="Compartir en Facebook"
              >
                <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
                </svg>
              </button>

              <button
                id="shareEmail"
                class="w-12 h-12 flex items-center justify-center rounded-full bg-white/80 hover:bg-white shadow-lg hover:shadow-xl transition-all transform hover:-translate-y-1 text-gray-600 hover:text-gray-800"
                title="Compartir por Email"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                </svg>
              </button>
            </div>

            <button
              id="logoutBtn"
              class="inline-flex items-center px-6 py-3 text-sm font-medium rounded-xl text-red-600 bg-white hover:bg-red-50 border-2 border-red-200 hover:border-red-300 transition-all shadow hover:shadow-md"
            >
              <span>Cerrar sesión</span>
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
              </svg>
            </button>
          </div>
        </div>

        <!-- Add Link Form -->
        <div class="bg-white rounded-xl shadow-lg p-6 mb-8">
          <h2 class="text-xl font-bold text-gray-900 mb-4">Agregar enlace</h2>
          <form id="addLinkForm" class="space-y-4">
            <div class="relative">
              <input
                type="url"
                id="linkInput"
                class="w-full px-4 py-3 text-base border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all"
                placeholder="https://ejemplo.com/producto"
                required
              />
              <div id="linkError" class="absolute left-0 right-0 top-full mt-1 text-sm text-red-500 hidden"></div>
            </div>

            <button
              type="submit"
              id="addLinkButton"
              class="w-full px-6 py-3 text-base font-medium rounded-xl text-white bg-gradient-to-r from-primary-500 to-secondary-500 hover:from-primary-600 hover:to-secondary-600 transition-all shadow hover:shadow-md transform hover:-translate-y-0.5 flex items-center justify-center gap-2"
            >
              <span>Agregar Regalo</span>
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
              </svg>
            </button>
          </form>
        </div>

        <!-- Links List -->
        <div class="space-y-4" id="linksList">
          <div class="animate-pulse space-y-4">
            <div class="h-16 bg-white rounded-xl shadow"></div>
            <div class="h-16 bg-white rounded-xl shadow"></div>
            <div class="h-16 bg-white rounded-xl shadow"></div>
          </div>
        </div>

        <!-- Empty State -->
        <div id="emptyState" class="text-center py-12 hidden">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 mx-auto text-gray-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4M12 20V4" />
          </svg>
          <p class="text-gray-500">Tu lista está vacía. ¡Agrega algunos regalos!</p>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  import { auth } from '../config/firebase';
  import { colorThemes } from '../config/theme';
  
  const API_URL = 'http://localhost:5001';
  let userPhone = '';

  // Elementos del DOM
  const userPhoneElement = document.getElementById('userPhone');
  const copyLinkBtn = document.getElementById('copyLinkBtn');
  const linkText = document.getElementById('linkText');
  const addLinkForm = document.getElementById('addLinkForm');
  const linkInput = document.getElementById('linkInput') as HTMLInputElement;
  const linkError = document.getElementById('linkError');
  const linksList = document.getElementById('linksList');
  const emptyState = document.getElementById('emptyState');
  const pageBackground = document.getElementById('pageBackground');
  const addLinkButton = document.getElementById('addLinkButton');

  // Función para actualizar el tema en toda la página
  const updatePageTheme = (themeId: string) => {
    const theme = colorThemes.find(t => t.id === themeId) || colorThemes[0];
    if (pageBackground) {
      pageBackground.className = `min-h-screen bg-gradient-to-br ${theme.gradient}`;
    }
    if (addLinkButton) {
      addLinkButton.className = `w-full px-6 py-3 text-base font-medium rounded-xl text-white bg-gradient-to-r ${theme.gradient} hover:opacity-90 transition-all shadow hover:shadow-md transform hover:-translate-y-0.5 flex items-center justify-center gap-2`;
    }
  };

  // Escuchar el evento de selección de tema
  document.addEventListener('themeSelected', (e: any) => {
    const themeId = e.detail.themeId;
    updatePageTheme(themeId);
  });

  // Escuchar el evento de actualización de tema
  document.addEventListener('updateTheme', (e: any) => {
    const themeId = e.detail.themeId;
    updatePageTheme(themeId);
  });

  // Cargar datos del usuario
  const loadUserData = async () => {
    if (!userPhone) return;
    
    try {
      const response = await fetch(`${API_URL}/api/users/${userPhone}`);
      if (!response.ok) throw new Error('Error al cargar información del usuario');
      const userData = await response.json();
      
      // Actualizar ícono
      document.dispatchEvent(new CustomEvent('updateIcon', {
        detail: { iconId: userData.iconId }
      }));

      // Actualizar tema
      document.dispatchEvent(new CustomEvent('updateTheme', {
        detail: { themeId: userData.themeId }
      }));
    } catch (error) {
      console.error('Error al cargar información del usuario:', error);
    }
  };

  // Manejar la selección de ícono
  document.addEventListener('iconSelected', async (e: any) => {
    if (!userPhone) return;
    
    try {
      const response = await fetch(`${API_URL}/api/users/${userPhone}/icon`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          iconId: e.detail.iconId
        }),
      });

      if (!response.ok) throw new Error('Error al actualizar el ícono');
    } catch (error) {
      console.error('Error al actualizar el ícono:', error);
      alert('Error al actualizar el ícono. Por favor, intenta de nuevo.');
    }
  });

  // Event Listeners
  auth.onAuthStateChanged((user) => {
    if (user && user.phoneNumber) {
      userPhone = user.phoneNumber;
      if (userPhoneElement) {
        userPhoneElement.textContent = userPhone;
      }
      loadLinks();
      loadUserData();
    } else {
      window.location.href = '/login';
    }
  });

  copyLinkBtn?.addEventListener('click', async () => {
    if (!userPhone) return;
    
    const link = `${window.location.origin}/${userPhone}`;
    try {
      await navigator.clipboard.writeText(link);
      if (linkText) {
        linkText.textContent = '¡Enlace copiado!';
        setTimeout(() => {
          if (linkText) linkText.textContent = 'Copiar enlace';
        }, 2000);
      }
    } catch (error) {
      console.error('Error al copiar:', error);
    }
  });

  addLinkForm?.addEventListener('submit', async (e) => {
    e.preventDefault();
    if (!linkInput) return;

    const url = linkInput.value.trim();
    if (!url) {
      showError('Por favor, ingresa un enlace válido');
      return;
    }

    try {
      new URL(url);
      await addLink(url);
    } catch {
      showError('Por favor, ingresa un enlace válido');
    }
  });

  // Función para mostrar errores
  const showError = (message: string) => {
    if (linkError) {
      linkError.textContent = message;
      linkError.classList.remove('hidden');
    }
  };

  // Función para ocultar errores
  const hideError = () => {
    if (linkError) {
      linkError.classList.add('hidden');
    }
  };

  // Función para agregar un enlace
  const addLink = async (url: string) => {
    if (!userPhone) return;

    try {
      const response = await fetch(`${API_URL}/api/gifts`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          userId: userPhone,
          url: url,
        }),
      });

      if (!response.ok) throw new Error('Error al agregar el enlace');
      
      // Limpiar el formulario y recargar la lista
      if (linkInput) linkInput.value = '';
      hideError();
      await loadLinks();
    } catch (error) {
      console.error('Error:', error);
      showError('Error al agregar el enlace. Por favor, intenta de nuevo.');
    }
  };

  // Función para cargar los enlaces
  const loadLinks = async () => {
    if (!userPhone) return;

    try {
      const response = await fetch(`${API_URL}/api/gifts/${userPhone}`);
      if (!response.ok) throw new Error('Error al cargar los enlaces');
      const gifts = await response.json();

      if (linksList && emptyState) {
        if (gifts.length === 0) {
          linksList.innerHTML = '';
          emptyState.classList.remove('hidden');
        } else {
          emptyState.classList.add('hidden');
          linksList.innerHTML = gifts.map((gift: any) => {
            const domain = new URL(gift.url).hostname.replace('www.', '');
            return `
              <div class="group bg-white rounded-xl shadow hover:shadow-lg transition-all transform hover:-translate-y-0.5">
                <div class="p-4 flex items-center gap-4">
                  <img 
                    src="https://www.google.com/s2/favicons?domain=${domain}&sz=32"
                    class="w-8 h-8"
                    alt="${domain}"
                  />
                  <div class="flex-1 min-w-0">
                    <div class="font-medium text-gray-900 truncate group-hover:text-primary-500 transition-colors">
                      ${domain}
                    </div>
                    <div class="text-sm text-gray-500 truncate">
                      ${gift.url}
                    </div>
                  </div>
                  <div class="flex items-center gap-2">
                    <a 
                      href="${gift.url}" 
                      target="_blank"
                      class="p-2 text-gray-400 hover:text-gray-600 transition-colors"
                      title="Abrir enlace"
                    >
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                      </svg>
                    </a>
                    <button 
                      onclick="deleteGift('${gift.id}')"
                      class="p-2 text-gray-400 hover:text-red-500 transition-colors"
                      title="Eliminar regalo"
                    >
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                      </svg>
                    </button>
                  </div>
                </div>
              </div>
            `;
          }).join('');
        }
      }
    } catch (error) {
      console.error('Error:', error);
      if (linksList) {
        linksList.innerHTML = '<p class="text-red-600 text-center">Error al cargar la lista. Por favor, intenta de nuevo.</p>';
      }
    }
  };

  // Verificar autenticación
  const authData = localStorage.getItem('linkgift:auth');
  if (!authData) {
    window.location.href = '/login';
  } else {
    const auth = JSON.parse(authData);
    if (!auth.isAuthenticated) {
      window.location.href = '/login';
    }
    // Mostrar el número de teléfono del usuario
    const userPhoneElement = document.getElementById('userPhone');
    if (userPhoneElement) {
      userPhoneElement.textContent = auth.phoneNumber;
    }
  }

  // Manejar logout
  const logoutBtn = document.getElementById('logoutBtn');
  logoutBtn?.addEventListener('click', () => {
    if (confirm('¿Estás seguro de que quieres cerrar sesión?')) {
      localStorage.removeItem('linkgift:auth');
      window.location.href = '/';
    }
  });

  // Actualizar las funciones de compartir
  const shareButtons = {
    whatsapp: document.getElementById('shareWhatsApp'),
    telegram: document.getElementById('shareTelegram'),
    twitter: document.getElementById('shareTwitter'),
    facebook: document.getElementById('shareFacebook'),
    email: document.getElementById('shareEmail'),
    copy: document.getElementById('copyLinkBtn')
  };

  const shareText = "¡Mira mi lista de regalos!";

  shareButtons.whatsapp?.addEventListener('click', () => {
    const url = `https://wa.me/?text=${encodeURIComponent(`${shareText} ${window.location.origin}/${userPhone}`)}`;
    window.open(url, '_blank');
  });

  shareButtons.telegram?.addEventListener('click', () => {
    const url = `https://t.me/share/url?url=${encodeURIComponent(`${window.location.origin}/${userPhone}`)}&text=${encodeURIComponent(shareText)}`;
    window.open(url, '_blank');
  });

  shareButtons.twitter?.addEventListener('click', () => {
    const url = `https://twitter.com/intent/tweet?text=${encodeURIComponent(shareText)}&url=${encodeURIComponent(`${window.location.origin}/${userPhone}`)}`;
    window.open(url, '_blank');
  });

  shareButtons.facebook?.addEventListener('click', () => {
    const url = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(`${window.location.origin}/${userPhone}`)}`;
    window.open(url, '_blank');
  });

  shareButtons.email?.addEventListener('click', () => {
    const subject = encodeURIComponent('¡Mira mi lista de regalos!');
    const body = encodeURIComponent(`¡Hola!\n\nQuiero compartir contigo mi lista de regalos:\n\n${window.location.origin}/${userPhone}\n\n¡Gracias!`);
    window.location.href = `mailto:?subject=${subject}&body=${body}`;
  });

  shareButtons.copy?.addEventListener('click', async () => {
    try {
      await navigator.clipboard.writeText(`${window.location.origin}/${userPhone}`);
      const linkText = document.getElementById('linkText');
      if (linkText) {
        linkText.textContent = '¡Enlace copiado!';
        setTimeout(() => {
          linkText.textContent = 'Copiar enlace';
        }, 2000);
      }
    } catch (err) {
      console.error('Error al copiar:', err);
    }
  });
</script>

<style>
  /* Asegurar que los items de la galería tengan la misma altura */
  .aspect-w-1 {
    position: relative;
    padding-bottom: 100%;
  }
  
  .aspect-h-1 {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }

  /* Limitar el número de líneas en la descripción */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style> 